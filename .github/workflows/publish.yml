name: publish

on:
  release:
    types:
      - released

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0

      - name: Test
        run: make test

  build-docker-images:
    runs-on: ubuntu-latest
    env:
      REPO: neochrome/bastion

    steps:

      - name: Build args
        id: build-args
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          if [[ $VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            TAGS="${REPO}:latest"
            TAGS="${TAGS},${REPO}:${MAJOR}"
            TAGS="${TAGS},${REPO}:${MAJOR}.${MINOR}"
            TAGS="${TAGS},${REPO}:${MAJOR}.${MINOR}.${PATCH}"
          else
            TAGS="${REPO}:${VERSION}"
          fi
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=tags::${TAGS}"
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.5.1

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3.2.0
        with:
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/arm/v6
          push: true
          tags: ${{ steps.build-args.outputs.tags }}
          labels: |
            version=${{ steps.build-args.outputs.version }}
            org.opencontainers.image.version=${{ steps.build-args.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
